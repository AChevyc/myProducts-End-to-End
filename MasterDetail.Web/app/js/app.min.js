var myApp=angular.module("myApp",["ngRoute","ngTouch","ngAnimate","$strap.directives","ui.bootstrap","kendo.directives","ngSignalR","tt.Authentication","ngCookies","pascalprecht.translate"]),theSpinner;myApp.config(["$routeProvider","$translateProvider","$httpProvider",function(n,t,i){n.when("/",{templateUrl:"app/views/overview.html",controller:"ArticlesController"}).when("/details/:id",{templateUrl:"app/views/details.html",controller:"ArticleDetailsController"}).when("/info",{templateUrl:"app/views/info.html"}).when("/login",{templateUrl:"app/views/login.html",controller:"LoginController"}).otherwise({redirectTo:"/"}),t.translations("de",tt.translations.de),t.useStaticFilesLoader({prefix:"app/translations/locale-",suffix:".json"}),t.preferredLanguage("de"),t.useLocalStorage(),i.responseInterceptors.push("loadingIndicatorInterceptor");var r=function(n){var t=document.getElementById("spinner");return theSpinner.spin(t),n};i.defaults.transformRequest.push(r)}]),myApp.run(["$http","$templateCache","$rootScope","$location","$translate","alertService","dialogService",function(n,t,i,r,u,f,e){window.applicationCache.addEventListener("updateready",function(){window.applicationCache.status==window.applicationCache.UPDATEREADY?(console.log("CACHE: Browser downloaded a new app cache manifest."),window.applicationCache.swapCache(),i.$apply(e.showModalDialog({},{headerText:"App Update",bodyText:u("APP_UPDATE_BODY"),closeButtonText:u("COMMON_NO"),actionButtonText:u("COMMON_YES"),callback:function(){window.location.reload(),console.log("CACHE: App will be updated...")}}))):console.log("CACHE: Manifest didn't change.")},!1),n.get("app/views/overview.html",{cache:t}),n.get("app/views/details.html",{cache:t}),n.get("app/views/info.html",{cache:t}),n.get("app/views/login.html",{cache:t});var o=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(n,t,i,r,u){t.indexOf("/signalr")===-1&&this.addEventListener("readystatechange",function(){this.readyState===1&&theSpinner.spin(document.getElementById("spinner")),this.readyState===4&&theSpinner.stop()},!1),o.call(this,n,t,i,r,u)},i.$on("$locationChangeStart",function(){i.tt.authentication.userLoggedIn||i.$broadcast(tt.authentication.constants.authenticationRequired)}),i.$on(tt.authentication.constants.authenticationRequired,function(){r.path("/login")}),i.$on(tt.authentication.constants.loginConfirmed,function(){r.path("/")}),i.$on(tt.authentication.constants.loginFailed,function(){r.path("/login"),f.pop({title:"Login",body:u("LOGIN_FAILED"),type:"error"})}),i.$on(tt.authentication.constants.logoutConfirmed,function(){r.path("/login")})}]),myApp.factory("loadingIndicatorInterceptor",function(n){return function(t){return t.then(function(n){return theSpinner.stop(),n},function(t){return theSpinner.stop(),n.reject(t)})}}),theSpinner=new Spinner({lines:12,length:20,width:2,radius:10,color:"#000",speed:1,trail:100,shadow:!0,top:"auto",left:"auto"});
//@ sourceMappingURL=app.min.js.map