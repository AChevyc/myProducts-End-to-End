define(["services/routeResolver"],function(){var t=angular.module("myApp",["ngRoute","ngTouch","ngAnimate","$strap.directives","ui.bootstrap","kendo.directives","ngSignalR","tt.Authentication","ngCookies","pascalprecht.translate","routeResolverServices"]),n;return t.config(["$routeProvider","$translateProvider","$httpProvider","routeResolverProvider","$controllerProvider","$compileProvider","$filterProvider","$provide",function(i,r,u,f,e,o,s,h){var c,l;ttTools.initLogger(ttTools.baseUrl+"api/log"),ttTools.logger.info("Configuring myApp..."),t.register={controller:e.register,directive:o.directive,filter:s.register,factory:h.factory,service:h.service},f.routeConfig.setBaseDirectories("app/views/","app/js/controllers/"),c=f.route,i.when("/info",c.resolve("Info")).when("/login",c.resolve("Login")).otherwise({redirectTo:"/"}),h.factory("$routeProviderService",function(){return i}),h.factory("routeResolverProviderService",function(){return f}),r.translations("de",tt.translations.de),r.useStaticFilesLoader({prefix:"app/translations/locale-",suffix:".json"}),r.preferredLanguage("de"),r.useLocalStorage(),u.responseInterceptors.push("loadingIndicatorInterceptor"),l=function(t){var i=document.getElementById("spinner");return n.spin(i),t},u.defaults.transformRequest.push(l)}]),t.run(["$http","$templateCache","$rootScope","$location","$translate","alertService","dialogService","$route","$routeProviderService","routeResolverProviderService",function(t,i,r,u,f,e,o,s,h,c){r.$on(tt.authentication.constants.loggedIn,function(){t({method:"GET",url:"api/modules"}).success(function(n){var t=c.route;angular.forEach(n,function(n){h.when(n.Url,t.resolve(n.Module)),n.OverrideRoot&&h.when("/",t.resolve(n.Module))}),s.reload()})}),window.applicationCache.addEventListener("updateready",function(){window.applicationCache.status==window.applicationCache.UPDATEREADY?(console.log("CACHE: Browser downloaded a new app cache manifest."),window.applicationCache.swapCache(),r.$apply(o.showModalDialog({},{headerText:"App Update",bodyText:f("APP_UPDATE_BODY"),closeButtonText:f("COMMON_NO"),actionButtonText:f("COMMON_YES"),callback:function(){window.location.reload(),console.log("CACHE: App will be updated...")}}))):console.log("CACHE: Manifest didn't change.")},!1);var l=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(t,i,r,u,f){i.indexOf("/signalr")===-1&&this.addEventListener("readystatechange",function(){this.readyState===1&&n.spin(document.getElementById("spinner")),this.readyState===4&&n.stop()},!1),l.call(this,t,i,r,u,f)},r.$on("$locationChangeStart",function(){r.tt.authentication.userLoggedIn||r.$broadcast(tt.authentication.constants.authenticationRequired)}),r.$on(tt.authentication.constants.authenticationRequired,function(){u.path("/login")}),r.$on(tt.authentication.constants.loginConfirmed,function(){u.path("/")}),r.$on(tt.authentication.constants.loginFailed,function(){u.path("/login"),e.pop({title:"Login",body:f("LOGIN_FAILED"),type:"error"})}),r.$on(tt.authentication.constants.logoutConfirmed,function(){u.path("/login")})}]),t.factory("loadingIndicatorInterceptor",function(t){return function(i){return i.then(function(t){return n.stop(),t},function(i){return n.stop(),t.reject(i)})}}),n=new Spinner({lines:12,length:20,width:2,radius:10,color:"#000",speed:1,trail:100,shadow:!0,top:"auto",left:"auto"}),t});
//@ sourceMappingURL=app.min.js.map