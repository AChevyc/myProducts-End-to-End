angular.module("tt.Authentication.Services",["tt.Authentication.Internal"]).factory("authService",["$rootScope","$injector","$q","httpBuffer",function(n,t,i,r){var f=new Lawnchair({adapter:"dom",table:"authenticationToken"},function(){}),e="tt:authNToken",u;return{authenticationSuccess:function(){n.$broadcast("tt:authNConfirmed"),r.retry()},setToken:function(n){var r=(new Date).getTime()+(n.expires_in-5)*1e3,i="Session "+n.access_token;u=u||t.get("$http"),u.defaults.headers.common.Authorization=i,$(document).ajaxSend(function(n,t){t.setRequestHeader("Authorization",i)}),n.expiration=r,f.save({key:e,token:n},"")},getToken:function(){var n=i.defer();return f.get(e,function(t){n.resolve(t)}),n.promise}}}]),angular.module("tt.Authentication.Providers",["tt.Authentication.Services","tt.Authentication.Internal"]).config(["$httpProvider",function(n){var t=["$rootScope","$q","authService","httpBuffer",function(n,t,i,r){function f(n){return n}function e(n){if(n.status===401){var i=t.defer();u(n,i)}else return t.reject(n)}function u(t,u){i.getToken().then(function(f){return r.append(t,u),f?(new Date).getTime()>f.token.expiration?(n.$broadcast("tt:authNRequired"),u.promise):(i.setToken(f.token),r.retry(),u.resolve(t)):(n.$broadcast("tt:authNRequired"),u.promise)})}return $.ajaxPrefilter(function(t){var i=t.error,r=t;t.error=function(t,f,e){if(typeof i=="function"&&t.status!=401)return i(t,f,e);var o=$.Deferred();n.$apply(u(r,o))}}),function(n){return n.then(f,e)}}];n.responseInterceptors.push(t)}]),angular.module("tt.Authentication.Internal",[]).factory("httpBuffer",["$injector",function(n){function r(t,r){function u(n){r.resolve(n)}function f(n){r.reject(n)}t.config?(i=i||n.get("$http"),i(t.config).then(u,f)):$.ajax(t).then(u,f)}var t=[],i;return{append:function(n,i){t.push({data:n,deferred:i})},retry:function(){for(var n=0;n<t.length;++n)r(t[n].data,t[n].deferred);t=[]}}}]);
//@ sourceMappingURL=authentication.min.js.map